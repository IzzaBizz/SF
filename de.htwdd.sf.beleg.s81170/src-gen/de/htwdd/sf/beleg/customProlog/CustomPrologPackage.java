/**
 * generated by Xtext 2.12.0
 */
package de.htwdd.sf.beleg.customProlog;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.htwdd.sf.beleg.customProlog.CustomPrologFactory
 * @model kind="package"
 * @generated
 */
public interface CustomPrologPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "customProlog";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.htwdd.de/sf/beleg/CustomProlog";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "customProlog";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CustomPrologPackage eINSTANCE = de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl.init();

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.ModelImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXPRESSIONS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.PrologdslImpl <em>Prologdsl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.PrologdslImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getPrologdsl()
   * @generated
   */
  int PROLOGDSL = 1;

  /**
   * The feature id for the '<em><b>Program</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOGDSL__PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Exquery</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOGDSL__EXQUERY = 1;

  /**
   * The number of structural features of the '<em>Prologdsl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOGDSL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.ProgramImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 2;

  /**
   * The feature id for the '<em><b>Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__CLAUSES = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.ExqueryImpl <em>Exquery</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.ExqueryImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getExquery()
   * @generated
   */
  int EXQUERY = 3;

  /**
   * The feature id for the '<em><b>Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXQUERY__QUERY = 0;

  /**
   * The number of structural features of the '<em>Exquery</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXQUERY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.QueryImpl <em>Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.QueryImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getQuery()
   * @generated
   */
  int QUERY = 4;

  /**
   * The feature id for the '<em><b>P</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__P = 0;

  /**
   * The number of structural features of the '<em>Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.ClauseImpl <em>Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.ClauseImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getClause()
   * @generated
   */
  int CLAUSE = 5;

  /**
   * The feature id for the '<em><b>Fact</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLAUSE__FACT = 0;

  /**
   * The feature id for the '<em><b>Rule</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLAUSE__RULE = 1;

  /**
   * The number of structural features of the '<em>Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLAUSE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.FactImpl <em>Fact</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.FactImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFact()
   * @generated
   */
  int FACT = 6;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACT__PREDICATE = 0;

  /**
   * The number of structural features of the '<em>Fact</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.RuleImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getRule()
   * @generated
   */
  int RULE = 7;

  /**
   * The feature id for the '<em><b>Rule</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__RULE = 0;

  /**
   * The feature id for the '<em><b>Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__QUERY = 1;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.PredicateImpl <em>Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.PredicateImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getPredicate()
   * @generated
   */
  int PREDICATE = 8;

  /**
   * The feature id for the '<em><b>Functor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE__FUNCTOR = 0;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE__TERM = 1;

  /**
   * The number of structural features of the '<em>Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.FunctorImpl <em>Functor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.FunctorImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFunctor()
   * @generated
   */
  int FUNCTOR = 9;

  /**
   * The feature id for the '<em><b>Func Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTOR__FUNC_NAME = 0;

  /**
   * The number of structural features of the '<em>Functor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.TermImpl <em>Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.TermImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getTerm()
   * @generated
   */
  int TERM = 10;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__ATOM = 0;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__LIST = 1;

  /**
   * The number of structural features of the '<em>Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.AtomImpl <em>Atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.AtomImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getAtom()
   * @generated
   */
  int ATOM = 11;

  /**
   * The feature id for the '<em><b>Ident</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM__IDENT = 0;

  /**
   * The number of structural features of the '<em>Atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.ListImpl <em>List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.ListImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getList()
   * @generated
   */
  int LIST = 12;

  /**
   * The feature id for the '<em><b>Nonempty</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST__NONEMPTY = 0;

  /**
   * The number of structural features of the '<em>List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.NonEmptyListImpl <em>Non Empty List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.NonEmptyListImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getNonEmptyList()
   * @generated
   */
  int NON_EMPTY_LIST = 13;

  /**
   * The feature id for the '<em><b>Folge</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NON_EMPTY_LIST__FOLGE = 0;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NON_EMPTY_LIST__ATOM = 1;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NON_EMPTY_LIST__TERM = 2;

  /**
   * The number of structural features of the '<em>Non Empty List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NON_EMPTY_LIST_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.htwdd.sf.beleg.customProlog.impl.FolgeImpl <em>Folge</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.htwdd.sf.beleg.customProlog.impl.FolgeImpl
   * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFolge()
   * @generated
   */
  int FOLGE = 14;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOLGE__ATOM = 0;

  /**
   * The number of structural features of the '<em>Folge</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOLGE_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link de.htwdd.sf.beleg.customProlog.Model#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Model#getExpressions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Expressions();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Prologdsl <em>Prologdsl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prologdsl</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Prologdsl
   * @generated
   */
  EClass getPrologdsl();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Prologdsl#getProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Program</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Prologdsl#getProgram()
   * @see #getPrologdsl()
   * @generated
   */
  EReference getPrologdsl_Program();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Prologdsl#getExquery <em>Exquery</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exquery</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Prologdsl#getExquery()
   * @see #getPrologdsl()
   * @generated
   */
  EReference getPrologdsl_Exquery();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link de.htwdd.sf.beleg.customProlog.Program#getClauses <em>Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Clauses</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Program#getClauses()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Clauses();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Exquery <em>Exquery</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exquery</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Exquery
   * @generated
   */
  EClass getExquery();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Exquery#getQuery <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Query</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Exquery#getQuery()
   * @see #getExquery()
   * @generated
   */
  EReference getExquery_Query();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Query <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Query
   * @generated
   */
  EClass getQuery();

  /**
   * Returns the meta object for the containment reference list '{@link de.htwdd.sf.beleg.customProlog.Query#getP <em>P</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>P</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Query#getP()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_P();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Clause <em>Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Clause</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Clause
   * @generated
   */
  EClass getClause();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Clause#getFact <em>Fact</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fact</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Clause#getFact()
   * @see #getClause()
   * @generated
   */
  EReference getClause_Fact();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Clause#getRule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rule</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Clause#getRule()
   * @see #getClause()
   * @generated
   */
  EReference getClause_Rule();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Fact <em>Fact</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fact</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Fact
   * @generated
   */
  EClass getFact();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Fact#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Fact#getPredicate()
   * @see #getFact()
   * @generated
   */
  EReference getFact_Predicate();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Rule#getRule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rule</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Rule#getRule()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Rule();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Rule#getQuery <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Query</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Rule#getQuery()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Query();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Predicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Predicate</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Predicate
   * @generated
   */
  EClass getPredicate();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Predicate#getFunctor <em>Functor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Functor</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Predicate#getFunctor()
   * @see #getPredicate()
   * @generated
   */
  EReference getPredicate_Functor();

  /**
   * Returns the meta object for the containment reference list '{@link de.htwdd.sf.beleg.customProlog.Predicate#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Term</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Predicate#getTerm()
   * @see #getPredicate()
   * @generated
   */
  EReference getPredicate_Term();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Functor <em>Functor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Functor</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Functor
   * @generated
   */
  EClass getFunctor();

  /**
   * Returns the meta object for the attribute '{@link de.htwdd.sf.beleg.customProlog.Functor#getFuncName <em>Func Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Func Name</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Functor#getFuncName()
   * @see #getFunctor()
   * @generated
   */
  EAttribute getFunctor_FuncName();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Term <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Term</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Term
   * @generated
   */
  EClass getTerm();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Term#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atom</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Term#getAtom()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Atom();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.Term#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>List</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Term#getList()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_List();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Atom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atom</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Atom
   * @generated
   */
  EClass getAtom();

  /**
   * Returns the meta object for the attribute '{@link de.htwdd.sf.beleg.customProlog.Atom#getIdent <em>Ident</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ident</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Atom#getIdent()
   * @see #getAtom()
   * @generated
   */
  EAttribute getAtom_Ident();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.List <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List</em>'.
   * @see de.htwdd.sf.beleg.customProlog.List
   * @generated
   */
  EClass getList();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.List#getNonempty <em>Nonempty</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nonempty</em>'.
   * @see de.htwdd.sf.beleg.customProlog.List#getNonempty()
   * @see #getList()
   * @generated
   */
  EReference getList_Nonempty();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.NonEmptyList <em>Non Empty List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Non Empty List</em>'.
   * @see de.htwdd.sf.beleg.customProlog.NonEmptyList
   * @generated
   */
  EClass getNonEmptyList();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.NonEmptyList#getFolge <em>Folge</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Folge</em>'.
   * @see de.htwdd.sf.beleg.customProlog.NonEmptyList#getFolge()
   * @see #getNonEmptyList()
   * @generated
   */
  EReference getNonEmptyList_Folge();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.NonEmptyList#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atom</em>'.
   * @see de.htwdd.sf.beleg.customProlog.NonEmptyList#getAtom()
   * @see #getNonEmptyList()
   * @generated
   */
  EReference getNonEmptyList_Atom();

  /**
   * Returns the meta object for the containment reference '{@link de.htwdd.sf.beleg.customProlog.NonEmptyList#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see de.htwdd.sf.beleg.customProlog.NonEmptyList#getTerm()
   * @see #getNonEmptyList()
   * @generated
   */
  EReference getNonEmptyList_Term();

  /**
   * Returns the meta object for class '{@link de.htwdd.sf.beleg.customProlog.Folge <em>Folge</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Folge</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Folge
   * @generated
   */
  EClass getFolge();

  /**
   * Returns the meta object for the containment reference list '{@link de.htwdd.sf.beleg.customProlog.Folge#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Atom</em>'.
   * @see de.htwdd.sf.beleg.customProlog.Folge#getAtom()
   * @see #getFolge()
   * @generated
   */
  EReference getFolge_Atom();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CustomPrologFactory getCustomPrologFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.ModelImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXPRESSIONS = eINSTANCE.getModel_Expressions();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.PrologdslImpl <em>Prologdsl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.PrologdslImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getPrologdsl()
     * @generated
     */
    EClass PROLOGDSL = eINSTANCE.getPrologdsl();

    /**
     * The meta object literal for the '<em><b>Program</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROLOGDSL__PROGRAM = eINSTANCE.getPrologdsl_Program();

    /**
     * The meta object literal for the '<em><b>Exquery</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROLOGDSL__EXQUERY = eINSTANCE.getPrologdsl_Exquery();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.ProgramImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__CLAUSES = eINSTANCE.getProgram_Clauses();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.ExqueryImpl <em>Exquery</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.ExqueryImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getExquery()
     * @generated
     */
    EClass EXQUERY = eINSTANCE.getExquery();

    /**
     * The meta object literal for the '<em><b>Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXQUERY__QUERY = eINSTANCE.getExquery_Query();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.QueryImpl <em>Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.QueryImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getQuery()
     * @generated
     */
    EClass QUERY = eINSTANCE.getQuery();

    /**
     * The meta object literal for the '<em><b>P</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__P = eINSTANCE.getQuery_P();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.ClauseImpl <em>Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.ClauseImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getClause()
     * @generated
     */
    EClass CLAUSE = eINSTANCE.getClause();

    /**
     * The meta object literal for the '<em><b>Fact</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLAUSE__FACT = eINSTANCE.getClause_Fact();

    /**
     * The meta object literal for the '<em><b>Rule</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLAUSE__RULE = eINSTANCE.getClause_Rule();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.FactImpl <em>Fact</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.FactImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFact()
     * @generated
     */
    EClass FACT = eINSTANCE.getFact();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACT__PREDICATE = eINSTANCE.getFact_Predicate();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.RuleImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Rule</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__RULE = eINSTANCE.getRule_Rule();

    /**
     * The meta object literal for the '<em><b>Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__QUERY = eINSTANCE.getRule_Query();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.PredicateImpl <em>Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.PredicateImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getPredicate()
     * @generated
     */
    EClass PREDICATE = eINSTANCE.getPredicate();

    /**
     * The meta object literal for the '<em><b>Functor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREDICATE__FUNCTOR = eINSTANCE.getPredicate_Functor();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREDICATE__TERM = eINSTANCE.getPredicate_Term();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.FunctorImpl <em>Functor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.FunctorImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFunctor()
     * @generated
     */
    EClass FUNCTOR = eINSTANCE.getFunctor();

    /**
     * The meta object literal for the '<em><b>Func Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTOR__FUNC_NAME = eINSTANCE.getFunctor_FuncName();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.TermImpl <em>Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.TermImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getTerm()
     * @generated
     */
    EClass TERM = eINSTANCE.getTerm();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__ATOM = eINSTANCE.getTerm_Atom();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__LIST = eINSTANCE.getTerm_List();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.AtomImpl <em>Atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.AtomImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getAtom()
     * @generated
     */
    EClass ATOM = eINSTANCE.getAtom();

    /**
     * The meta object literal for the '<em><b>Ident</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATOM__IDENT = eINSTANCE.getAtom_Ident();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.ListImpl <em>List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.ListImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getList()
     * @generated
     */
    EClass LIST = eINSTANCE.getList();

    /**
     * The meta object literal for the '<em><b>Nonempty</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST__NONEMPTY = eINSTANCE.getList_Nonempty();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.NonEmptyListImpl <em>Non Empty List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.NonEmptyListImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getNonEmptyList()
     * @generated
     */
    EClass NON_EMPTY_LIST = eINSTANCE.getNonEmptyList();

    /**
     * The meta object literal for the '<em><b>Folge</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NON_EMPTY_LIST__FOLGE = eINSTANCE.getNonEmptyList_Folge();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NON_EMPTY_LIST__ATOM = eINSTANCE.getNonEmptyList_Atom();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NON_EMPTY_LIST__TERM = eINSTANCE.getNonEmptyList_Term();

    /**
     * The meta object literal for the '{@link de.htwdd.sf.beleg.customProlog.impl.FolgeImpl <em>Folge</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.htwdd.sf.beleg.customProlog.impl.FolgeImpl
     * @see de.htwdd.sf.beleg.customProlog.impl.CustomPrologPackageImpl#getFolge()
     * @generated
     */
    EClass FOLGE = eINSTANCE.getFolge();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOLGE__ATOM = eINSTANCE.getFolge_Atom();

  }

} //CustomPrologPackage
